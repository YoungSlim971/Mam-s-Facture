#!/usr/bin/env bash
set -euo pipefail

# Se place dans la racine du projet quel que soit l'endroit d'o√π le script est lanc√©
cd "$(dirname "$0")/.." || exit 1
if [[ ! -d backend ]]; then
  # Le script √©tait d√©j√† a la racine
  cd "$(dirname "$0")" || exit 1
fi

if [[ "$(uname)" != "Darwin" ]]; then
  echo "Ce script est destin√© √† macOS." >&2
  exit 1
fi

error_exit() {
  echo "‚ùå $1" >&2
  exit 1
}

echo "üßπ [0/5] Lib√©ration des ports si n√©cessaires..."
PORTS_TO_FREE=(3001 5173)

for PORT in "${PORTS_TO_FREE[@]}"; do
  PID=$(lsof -ti tcp:$PORT)
  if [ -n "$PID" ]; then
    echo "‚ö†Ô∏è Port $PORT utilis√© par le process $PID, on le tue..."
    kill -9 $PID || echo "‚ùå Impossible de tuer le process $PID sur le port $PORT"
  else
    echo "‚úÖ Port $PORT d√©j√† libre"
  fi
done

echo "üü¢ Tous les ports critiques sont pr√™ts."

echo "üîß [1/5] Installation des d√©pendances..."
pnpm install --frozen-lockfile || error_exit "Impossible d'installer les d√©pendances racine."
(cd backend && pnpm install --frozen-lockfile) || error_exit "Impossible d'installer les d√©pendances backend."
(cd frontend && pnpm install --frozen-lockfile && pnpm build) || error_exit "√âchec de la compilation du frontend."

echo "‚úÖ [2/5] Frontend compil√© avec succ√®s"

echo "üöÄ [3/5] Lancement des serveurs..."
pnpm dev:all &
SERVERS_PID=$!

# Attente que le port 5173 soit disponible
for i in {1..15}; do
  if nc -z localhost 5173 2>/dev/null; then
    READY=1
    break
  fi
  sleep 1
done

if [[ -z ${READY:-} ]]; then
  kill "$SERVERS_PID"
  error_exit "Le port 5173 n'est pas disponible."
fi

echo "üåê [4/5] Ouverture de Safari..."
open -a Safari http://localhost:5173 || { kill "$SERVERS_PID"; error_exit "Impossible d'ouvrir Safari."; }

echo "üéâ [5/5] L'application est lanc√©e !"

trap "kill \"$SERVERS_PID\"" SIGINT
wait "$SERVERS_PID"
